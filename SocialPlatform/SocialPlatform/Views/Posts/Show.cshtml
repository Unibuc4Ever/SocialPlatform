@model SocialPlatform.Models.Post
@using SocialPlatform.Models;

@{ 
    var db = new ApplicationDbContext();
	var userId = User.Identity.GetUserId();
}

@using Microsoft.AspNet.Identity
@{
	ViewBag.Title = "Show";
}

<script>
    function sendLikeForm(postId) {
		$.ajax({
			url: "/Likes/New",
			type: 'POST',
			contentType: 'application/json',
			data: JSON.stringify({
				PostId: postId,
				type: "like"
			}),
			success: function () {
				location.reload();
			},
            error: function (jqXHR, exception) {
                alert('Error message. Failed my Like');
            }
        });
	}

    function sendUnLikeForm(likeId) {
        $.ajax({
            url: "/Likes/Delete",
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                LikeId: likeId
            }),
            success: function () {
				location.reload();
            },
            error: function (jqXHR, exception) {
                alert('Error message. Failed my Like');
            }
        });
    }
</script>

<h2>Show  <a class="btn btn-primary" href="/Posts">Inapoi la News Feed</a></h2>

<div class="panel panel-default" style="background-color:azure">

	@Html.Partial("ShowPost", Model)

    <div class="panel-footer">
		@{
			var Likes = db.Likes.Where(l => (l.UserId == userId && l.PostId == Model.PostId));
			if (Likes.Count() > 0) {
			<button onclick="sendUnLikeForm(@Likes.First().LikeId)" class="btn btn-warning">
				UnLike
			</button>
			}
			else
			{
			<button onclick="sendLikeForm(@Model.PostId)" class="btn btn-warning">
				Like
			</button>
			}
			<p>Likes: @Model.Likes.Count()</p>
		}

        @if (Model.User.Id == User.Identity.GetUserId())
        {
            
            <br />
            <a class="btn btn-sm btn-success" href="/Posts/Edit/@Model.PostId">Editaza</a>
            <div style="display: inline-block; float : left">
                <form method="post" action="/Posts/Delete/@Model.PostId">
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                    <button class="btn btn-sm btn-danger" type="submit">Sterge</button>
                </form>
            </div>
        }
    </div>
</div>

<div style="position: center">
	@foreach (var comm in Model.Comments)
	{
		<article class="row">
			<div class="col-md-10 col-sm-10">
				<div class="panel panel-default arrow left">
					<div class="panel-body">
						<header class="text-left">
							<div class="comment-user"><i class="fa fa-user"></i>  @comm.User.FirstName @comm.User.LastName</div>
							<time class="comment-date" datetime="16-12-2014 01:05"><i class="fa fa-clock-o"></i>@comm.CreatedAt</time>
						</header>
						<div class="comment-post">
							<p>@comm.Content</p>
						</div>
						@if (comm.UserId == User.Identity.GetUserId())
						{
							<a href="/Comments/Edit/@comm.CommentId" class="btn btn-default">Editeaza</a>
							<div style="display: inline-block; float : left">
								<form method="post" action="/Comments/Delete/@comm.CommentId">
									@Html.HttpMethodOverride(HttpVerbs.Delete)
									<button class="btn btn-danger">Sterge</button>
								</form>
							</div>
						}
						@*<p class="text-right"><a href="#" class="btn btn-default btn-sm"><i class="fa fa-reply"></i> reply</a></p>*@
					</div>
				</div>
			</div>
		</article>
	}
</div>

<hr />

<form method="post" action="/Comments/New/@Model.PostId">
	<label>Adauga un Comentariu</label>
	<br />
	<textarea class="form-control" name="Content"></textarea>
	@Html.ValidationMessage("Content", "", new { @class = "text-danger" })
	<br />
	<button class="btn btn-success " type="submit">Adauga comentariu</button>
</form>


<style>
	/*font Awesome http://fontawesome.io*/
	@@import url(//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css);
	/*Comment List styles*/
	.comment-list .row {
		margin-bottom: 0px;
	}

	.comment-list .panel .panel-heading {
		padding: 4px 15px;
		position: absolute;
		border: none;
		/*Panel-heading border radius*/
		border-top-right-radius: 0px;
		top: 1px;
	}

		.comment-list .panel .panel-heading.right {
			border-right-width: 0px;
			/*Panel-heading border radius*/
			border-top-left-radius: 0px;
			right: 16px;
		}

		.comment-list .panel .panel-heading .panel-body {
			padding-top: 6px;
		}

	.comment-list figcaption {
		/*For wrapping text in thumbnail*/
		word-wrap: break-word;
	}
	/* Portrait tablets and medium desktops */
	@@media (min-width: 768px) {
		.comment-list .arrow:after, .comment-list .arrow:before {
			content: "";
			position: absolute;
			width: 0;
			height: 0;
			border-style: solid;
			border-color: transparent;
		}

		.comment-list .panel.arrow.left:after, .comment-list .panel.arrow.left:before {
			border-left: 0;
		}
		/*****Left Arrow*****/
		/*Outline effect style*/
		.comment-list .panel.arrow.left:before {
			left: 0px;
			top: 30px;
			/*Use boarder color of panel*/
			border-right-color: inherit;
			border-width: 16px;
		}
		/*Background color effect*/
		.comment-list .panel.arrow.left:after {
			left: 1px;
			top: 31px;
			/*Change for different outline color*/
			border-right-color: #FFFFFF;
			border-width: 15px;
		}
		/*****Right Arrow*****/
		/*Outline effect style*/
		.comment-list .panel.arrow.right:before {
			right: -16px;
			top: 30px;
			/*Use boarder color of panel*/
			border-left-color: inherit;
			border-width: 16px;
		}
		/*Background color effect*/
		.comment-list .panel.arrow.right:after {
			right: -14px;
			top: 31px;
			/*Change for different outline color*/
			border-left-color: #FFFFFF;
			border-width: 15px;
		}
	}

	.comment-list .comment-post {
		margin-top: 6px;
	}
</style>