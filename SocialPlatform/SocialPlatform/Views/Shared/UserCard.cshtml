@using SocialPlatform.Models
@model ApplicationUser
@using System.Data.Entity
@using Microsoft.AspNet.Identity;

@{
    var db = new ApplicationDbContext();
    var userId = User.Identity.GetUserId();
    var user = db.Users.Find(userId);
    // If ViewBag.ViewProfile is not false, then show "show profile" button
}


<div class="group-card mdl-card mdl-shadow--2dp" style="min-height: inherit; min-width:435px;
    @if (ViewBag.ViewProfile == false)
    {
        @: width: 100%;
    }
    ">

    <div class="mdl-card__title mdl-card--expand"
         onclick="window.location.href = '/Users/Show/@Model.Id'">
        <h2 class="mdl-card__title-text">@Model.FirstName @Model.LastName</h2>
    </div>

    <div class="mdl-card__supporting-text">
        Friends: @Model.Friends.Count()<br>
    </div>

    <div class="mdl-card__actions mdl-card--border" style="display: flex; justify-content: space-between">
        @if (ViewBag.ViewProfile != false)
        {
            <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
               href="/Users/Show/@Model.Id">
                View
            </a>
        }

        @if (ViewBag.ViewProfile == false && (Model.Friends.Count(usr => usr.Id == userId) > 0 || Model.Id == userId))
        {
            <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
               href="/Posts/New/@Model.WallId">
                    Post on wall
            </a>
        }

        @if (userId != Model.Id && userId != null)
        {
            if (user.Friends.Where(usr => usr.Id == Model.Id).Count() == 1)
            {
                <button class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                        id="friend_request_button_@Model.Id"
                        onclick="unFriend('@Model.Id');">
                    Unfriend
                </button>
            }
            else if (user.SentFriendRequests.Where(usr => usr.Id == Model.Id).Count() == 1)
            {
                <button class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                        id="friend_request_button_@Model.Id"
                        onclick="cancelFriendRequest('@Model.Id');">
                    Cancel Friend Request
                </button>
            }
            else if (user.ReceivedFriendRequests.Where(usr => usr.Id == Model.Id).Count() == 1)
            {
                <button class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                        id="friend_request_button_@Model.Id"
                        onclick="acceptFriendRequest('@Model.Id');">
                    Accept Friend Request
                </button>
            }
            else
            {
                <button class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                        id="friend_request_button_@Model.Id"
                        onclick="sendFriendRequest('@Model.Id');">
                    Friend Request
                </button>
            }
        }
        else if (userId == Model.Id)
        {
            <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
               href="/Users/Settings">
                Settings
            </a>
        }

        @if (User.IsInRole("Administrator") && Model.Id != User.Identity.GetUserId())
        {
            <a href="/Admin/DeleteUser/@Model.Id" class="mdl-button mdl-js-button mdl-button--accent">
                Delete User
            </a>
        }

    </div>

</div>
